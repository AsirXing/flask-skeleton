0) Clone a copy of the skeleton:

   git clone git@github.com:sean-/flask-skeleton.git

1) Remove the reminants of git:

   rm -rf .git .gitignore

2) Rename from 'skeleton' to 'myapp':

   # At some point I'll change this step to be a script
   find . -type f -print0 | xargs -0 -n 1 perl -p -e '#skeleton#myapp#go'
   mv skeleton myapp

3) Setup fossil (preferred SCM of choice atm: http://www.fossil-scm.org/):

   alias fs fossil
   mkdir -p ~/src/.fossils
   fs new ~/src/.fossils/skeleton.fossil
   fs open ~/src/.fossils/skeleton.fossil

   # Settings generated via:
   # fs set | grep local | awk '{print "fs set " $1 " " $3}'
   fs set autosync 1
   fs set clearsign 1
   fs set editor vi
   fs set ignore-glob bin/*,include/*,lib/*,local_settings.py,*.pyc
   fs set localauth 0
   fs set pgp-command gpg2
   fs addremove
   fs ci -m "Initial checkin of skeleton app"

4) Start the database (specifically for OS-X with Pg installed via ports):

   # MacPorts installed version of PostgreSQL 9.1
   sudo su - postgres -c '/opt/local/lib/postgresql91/bin/postgres -D /opt/local/var/db/postgresql91/defaultdb'

5) Create a virualenv for the skeleton:

   # MacPorts installed version of Python 2.7
   /opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenv --no-site-packages .

6) Activate the virtualenv:

   # tcsh for use, sh for shell scripts. Bash? wossat?
   source bin/activate.csh

7) Pull in the required packages. This step is a bit goofy with the two
   parts. This is mostly due to using SQLAlchemy 0.7 which isn't in PIP yet,
   and having to find the path to pg_config(1) which isn't in the normal
   search path.

   # Run SQLAlchemy 0.7 or newer
   pip install --download-cache=/tmp/sean -I -f http://surfnet.dl.sourceforge.net/project/sqlalchemy/sqlalchemy/0.7b4/SQLAlchemy-0.7b4.tar.gz sqlalchemy==0.7b4
   # Install psycopg2
   env PATH=/opt/local/lib/postgresql91/bin/:${PATH} pip install --download-cache=/tmp/sean -I psycopg2

   # Even thought requirements.txt ships with SQLAlchemy and psycopg2, remove
   # them from the list of requirements for now.
   cat requirements.txt | egrep -vi '(SQLAlchemy==0.7b4|psycopg2==2.4)$' > requirements.tmp
   pip install --download-cache=/tmp/${USER} -I -r requirements.tmp --no-install
   pip install --download-cache=/tmp/${USER} -I -r requirements.tmp --no-download
   pip freeze | sort > requirements.txt
   rm -f requirements.tmp

8) Setup debugging:

   echo 'DEBUG = True' >> local_settings.py
   echo 'TESTING = True' >> local_settings.py

   When you go in to production, be sure to remove these two lines!!!

9) Initialize the database:

   # This isn't done yet in the skeleton
   ./create_db.py

10) In production, you will need to combine all of your static assets
    together and probably have them served by nginx. Something like:

    mkdir static
    cd static
    find ../skeleton -name static
    # Make a symlink for everything in to the static dir. e.g.:
    # ln -s ../skeleton/modules/mod1/static mod1
