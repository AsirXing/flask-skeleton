	This is a "LAMP" stack done right... but using *NIX (FreeBSD/Mac),
	nginx, memcache, python and postgresql. :~]

Recently someone asked me what my preferred web framework was these days (it
feels like I've tried them all and have developed a few opinions along the
way). It's Flask (as of May 2011), but explaining the bootstrapping process
required to get a new app up and running is a high enough that you can't
easily expect a new programmer to figure it out. And this isn't unique to
Flask, bootstrapping any framework is typically a tremendous pain in the
ass... and it shouldn't have to be... yet still is. So!, invariably you end
up wasting your afternoon looking up the required implementation details to
stitch components that every application needs (e.g. a database, static
files, caching). Bleh.

This skeleton app is has been hanging out in my ~/src/template_app directory
for long enough and needs to see the light of day. It has grown to support
multiple modules structured in a "ready-to-grow" way that shouldn't take
hours of research to figure out how it was all put together or where the next
set of work should go in order to get something running. All of the provided
"scaffolding" resides somewhere under 'skeleton/' so that your friendly
`egrep -r` command can find the desired string and cement your understanding
of the layout. Read through the rest of the README for the relevant steps and
details.

With Flask being the awesomest awesomesauce around (at least as of May 2011),
hopefully this contribution from your neighborhood ghost in the machine will
make Flask development a bit easier to get started with. If you find new
tricks that are sensible, straightforward and will help other developers
setup their apps in a non-fail way, let me know and I'll incorporate your
changes (including improved documentation, unit tests and comments).  Cheers
and good luck.

To begin making use of this skeleton, step through the instructions in
INSTALL.
