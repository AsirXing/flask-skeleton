diff --git a/flaskext/cache/__init__.py b/flaskext/cache/__init__.py
index 10f5d57..35c967d 100644
--- a/flaskext/cache/__init__.py
+++ b/flaskext/cache/__init__.py
@@ -8,6 +8,7 @@
     :copyright: (c) 2010 by Thadeus Burgess.
     :license: BSD, see LICENSE for more details
 """
+import hashlib
 from functools import wraps
 
 from werkzeug import import_string
@@ -177,14 +178,15 @@ class Cache(object):
         def memoize(f):
             @wraps(f)
             def decorated_function(*args, **kwargs):
-                cache_key = ('memoize', f.__name__, id(f), args, str(kwargs))
-                                
+                cache_key = hashlib.md5()
+                cache_key.update("{1}{1}{1}".format(f.__name__, args, kwargs))
+                cache_key = cache_key.digest().encode('base64')[:22]
+
                 rv = self.cache.get(cache_key)
                 if rv is None:
                     rv = f(*args, **kwargs)
                     self.cache.set(cache_key, rv, timeout=timeout)
-                    if cache_key not in self._memoized:
-                        self._memoized.append(cache_key)
+                    self._memoized.append((f.__name__, cache_key))
                 return rv
             return decorated_function
         return memoize
@@ -212,8 +214,8 @@ class Cache(object):
         :param \*keys: A list of function names to clear from cache.
         """
         def deletes(item):
-            if item[0] == 'memoize' and item[1] in keys:
-                self.cache.delete(item)
+            if item[0] in keys:
+                self.cache.delete(item[1])
                 return True
             return False
         
